#!/bin/bash

# Installs a specific version of golang.
# Assumes OS is linux-amd64.
#
# Go version history is available here: https://golang.org/dl/
#
# Usage:
#
#   golang-install [GO_VERSION]
#
# GO_VERSION must be an exact version (such as 1.7.4) or minor version (such as 1.6 or 1.7).

set -e

# User supplied args
GO_VERSION=$1
if [[ -z $GO_VERSION ]]; then echo "Missing arg1 GO_VERSION" && exit 1; fi

echo "Attempting to download Go version '$GO_VERSION'..."

# Versions before Go 1.8 are considered archived, and are no longer getting updates.
# We should ensure everything has been moved off them and then remove here.
if [ "$GO_VERSION" == "1.4" ]; then GO_VERSION="1.4.3"; fi
if [ "$GO_VERSION" == "1.5" ]; then GO_VERSION="1.5.4"; fi
if [ "$GO_VERSION" == "1.6" ]; then GO_VERSION="1.6.4"; fi
if [ "$GO_VERSION" == "1.7" ]; then GO_VERSION="1.7.6"; fi

# Active Golang versions
if [ "$GO_VERSION" == "1.8" ]; then GO_VERSION="1.8.7"; fi
if [ "$GO_VERSION" == "1.9" ]; then GO_VERSION="1.9.4"; fi

GODIST=go$GO_VERSION.linux-amd64.tar.gz

INSTALL_ROOT=/usr/local

# Download the golang package if needed
mkdir -p download
if [ ! -e download/$GODIST ]; then
    echo -n "Downloading $GODIST ..."
    curl -s -o download/$GODIST https://storage.googleapis.com/golang/$GODIST
    echo "Done"
fi

# Cleanup any existing versions and install the new one
sudo rm -rf $INSTALL_ROOT/go
echo -n "Extracting $GODIST"
sudo tar -C $INSTALL_ROOT -xzf download/$GODIST
echo "Done."
echo "Golang installed successfully"
