#!/bin/bash

# Uploads bin/handler.zip to s3 and writes a catapult artifact to CircleCI
#
# Usage:
#
#   lambda-publish

set -e

# Set automatically by CircleCI
: ${CIRCLE_PROJECT_REPONAME?"Missing required env var"}
REPO=$CIRCLE_PROJECT_REPONAME
: ${CIRCLE_SHA1?"Missing required env var"}
SHORT_SHA=${CIRCLE_SHA1:0:7}
: ${CIRCLE_PROJECT_USERNAME?"Missing required env var"}
USER=$CIRCLE_PROJECT_USERNAME

# Set by init service
: ${LAMBDA_AWS_REGION?"Missing required env var"}
: ${LAMBDA_AWS_ACCESS_KEY_ID?"Missing required env var"}
: ${LAMBDA_AWS_SECRET_ACCESS_KEY?"Missing required env var"}
: ${LAMBDA_AWS_BUCKET?"Missing required env var"}

LAMBDA_AWS_S3_KEY=${REPO}/${SHORT_SHA}/handler.zip

# upload to s3
echo "Uploading to S3..."
AWS_REGION=$LAMBDA_AWS_REGION \
          AWS_ACCESS_KEY_ID=$LAMBDA_AWS_ACCESS_KEY_ID \
          AWS_SECRET_ACCESS_KEY=$LAMBDA_AWS_SECRET_ACCESS_KEY \
          aws s3 cp bin/handler.zip s3://${LAMBDA_AWS_BUCKET}/${LAMBDA_AWS_S3_KEY}

# Create an artifact with JSON info about the function zip file (uses the catapult/models SourcePath data model for convenience)
echo "{\"Domain\": \"lambda\", \"Org\": \"${USER}\", \"Repo\": \"${REPO}\", \"Ref\": \"${SHORT_SHA}\", \"Vars\": {\"S3Bucket\": \"${LAMBDA_AWS_BUCKET}\", \"S3Key\": \"${LAMBDA_AWS_S3_KEY}\"}}" > $CIRCLE_ARTIFACTS/lambda_artifact
