#!/bin/bash

# Uploads zip file to s3 and publishes a catapult app.
#
# Usage:
#
#   catapult-publish-lambda [APP NAME]

set -e

DIR=$(dirname "$0")
. $DIR/utils

# User supplied arg
APP_NAME=$1
if [[ -z $APP_NAME ]]; then echo "Missing arg1 APP_NAME" && exit 1; fi

# Set automatically by CircleCI
: ${CIRCLE_PROJECT_REPONAME?"Missing required env var"}
REPO=$CIRCLE_PROJECT_REPONAME
: ${CIRCLE_SHA1?"Missing required env var"}
FULL_SHA=${CIRCLE_SHA1}
SHORT_SHA=${CIRCLE_SHA1:0:7}
: ${CIRCLE_PROJECT_USERNAME?"Missing required env var"}
USER=$CIRCLE_PROJECT_USERNAME
: ${CIRCLE_BUILD_NUM?"Missing required env var"}
BUILD_NUM=$CIRCLE_BUILD_NUM
: ${CIRCLE_BRANCH?"Missing required env var"}
BRANCH=$CIRCLE_BRANCH

# Set by init service
: ${LAMBDA_AWS_ACCESS_KEY_ID?"Missing required env var"}
: ${LAMBDA_AWS_SECRET_ACCESS_KEY?"Missing required env var"}
: ${LAMBDA_AWS_BUCKET?"Missing required env var"}
: ${CATAPULT_URL?"Missing required env var"}
: ${CATAPULT_USER?"Missing required env var"}
: ${CATAPULT_PASS?"Missing required env var"}

install_awscli

install_yq

RUN_TYPE=$(yq e '.run.type' "launch/${APP_NAME}.yml")
if [[ $RUN_TYPE != "lambda" ]]; then
    echo "Can only publish applications with run type 'lambda' using this script; got ${RUN_TYPE}"
    exit 1
fi

AWS_REGIONS="us-east-1 us-east-2 us-west-1 us-west-2"
for REGION in ${AWS_REGIONS}; do
    S3_ARTIFACTS=${S3_ARTIFACTS},"S3Buckets={${REGION}=\\\"${LAMBDA_AWS_BUCKET}-${REGION}"
done

CIRCLE_CI_INTEGRATIONS_URL=$(dirname $CATAPULT_URL)

# TODO: should probably `ark init` things with an environment variable pointing to base url of circle-ci-integrations
# Update Catapult URL to v2 if not already
if [[ ! $CATAPULT_URL = *"/v2/catapult"* ]]; then 
  CATAPULT_URL=${CATAPULT_URL/catapult/v2/catapult}
fi
LAMBDA_AWS_S3_KEY=${APP_NAME}/${SHORT_SHA}/${APP_NAME}.zip

# upload to s3
echo "Uploading to S3..."
for AWS_REGION in ${AWS_REGIONS}; do
    # region doesn't really matter for an S3 upload, since the bucket region is fixed
    AWS_REGION=$AWS_REGION \
              AWS_ACCESS_KEY_ID=$LAMBDA_AWS_ACCESS_KEY_ID \
              AWS_SECRET_ACCESS_KEY=$LAMBDA_AWS_SECRET_ACCESS_KEY \
              aws s3 cp bin/${APP_NAME}.zip s3://${LAMBDA_AWS_BUCKET}-${AWS_REGION}/${LAMBDA_AWS_S3_KEY}

    if [ -e swagger.yml ]; then
        echo "Uploading swagger.yml"
        # api gateway fails to parse on x-nullable
        sed '/x-nullable/d' ./swagger.yml > ./swagger.lambda.yml
        AWS_REGION=$AWS_REGION \
                  AWS_ACCESS_KEY_ID=$LAMBDA_AWS_ACCESS_KEY_ID \
                  AWS_SECRET_ACCESS_KEY=$LAMBDA_AWS_SECRET_ACCESS_KEY \
                  aws s3 cp swagger.lambda.yml s3://${LAMBDA_AWS_BUCKET}-${AWS_REGION}/${APP_NAME}/${SHORT_SHA}/swagger.lambda.yml
    fi
done;

# publish the application to catapult
echo "Publishing to catapult..."
echo "Using data:"
DATA="{\"username\":\"${USER}\",\"reponame\":\"${REPO}\",\"buildnum\":${BUILD_NUM},\"app\":{\"run_type\":\"${RUN_TYPE}\",\"id\":\"${APP_NAME}\",\"source\":\"github:Clever/${REPO}@${FULL_SHA}\",\"artifacts\":\"lambda:clever/${APP_NAME}@${SHORT_SHA};S3Key=\\\"${LAMBDA_AWS_S3_KEY}${S3_ARTIFACTS}\",\"branch\":\"${BRANCH}\"}}"
echo "${DATA}"
echo "================================================================================"
SC=$(curl -u $CATAPULT_USER:$CATAPULT_PASS \
          --retry 5 \
          -w "%{http_code}" \
          --output catapult.out \
          -H "Content-Type: application/json" \
          -X POST \
          -d "${DATA}" \
          $CATAPULT_URL)

if [ "$SC" -eq 200 ]; then
    echo "Successfully published catapult application"
    rm -f catapult.out
else
    echo "Failed to publish catapult application"
    echo "------------------------------------------------"
    cat catapult.out
    echo ""
    echo "------------------------------------------------"
    rm -f catapult.out
    exit 1
fi

# publish catalog app config
CATALOG_SYNC_SCRIPT="$( cd "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )/catalog-sync"
"${CATALOG_SYNC_SCRIPT}" $CIRCLE_CI_INTEGRATIONS_URL $CATAPULT_USER $CATAPULT_PASS $APP_NAME
