#!/bin/bash

# Uploads zip file to s3 and publishes a catapult app.
#
# Usage:
#
#   catapult-publish-lambda [AWS REGION] [APP NAME]

set -e

# User supplied arg
LAMBDA_AWS_REGION=$1
if [[ -z $LAMBDA_AWS_REGION ]]; then echo "Missing arg1 REGION" && exit 1; fi
APP_NAME=$2
if [[ -z $APP_NAME ]]; then echo "Missing arg2 APP_NAME" && exit 1; fi

# Set automatically by CircleCI
: ${CIRCLE_PROJECT_REPONAME?"Missing required env var"}
REPO=$CIRCLE_PROJECT_REPONAME
: ${CIRCLE_SHA1?"Missing required env var"}
FULL_SHA=${CIRCLE_SHA1}
SHORT_SHA=${CIRCLE_SHA1:0:7}
: ${CIRCLE_PROJECT_USERNAME?"Missing required env var"}
USER=$CIRCLE_PROJECT_USERNAME
: ${CIRCLE_BUILD_NUM?"Missing required env var"}
BUILD_NUM=$CIRCLE_BUILD_NUM
: ${CIRCLE_BRANCH?"Missing required env var"}
BRANCH=$CIRCLE_BRANCH

# Set by init service
: ${LAMBDA_AWS_ACCESS_KEY_ID?"Missing required env var"}
: ${LAMBDA_AWS_SECRET_ACCESS_KEY?"Missing required env var"}
: ${LAMBDA_AWS_BUCKET?"Missing required env var"}
: ${CATAPULT_URL?"Missing required env var"}
: ${CATAPULT_USER?"Missing required env var"}
: ${CATAPULT_PASS?"Missing required env var"}

# hack to switch from /catapult to /v2/catapult
# TODO: should probably `ark init` things with an environment variable pointing to base url of circle-ci-integrations
CATAPULT_URL=$(echo "${CATAPULT_URL}" | sed 's/\/catapult/\/v2\/catapult/')
LAMBDA_AWS_S3_KEY=${REPO}/${SHORT_SHA}/handler.zip

# upload to s3
echo "Uploading to S3..."
AWS_REGION=$LAMBDA_AWS_REGION \
          AWS_ACCESS_KEY_ID=$LAMBDA_AWS_ACCESS_KEY_ID \
          AWS_SECRET_ACCESS_KEY=$LAMBDA_AWS_SECRET_ACCESS_KEY \
          aws s3 cp bin/handler.zip s3://${LAMBDA_AWS_BUCKET}/${LAMBDA_AWS_S3_KEY}

# publish the application to catapult
echo "Publishing to catapult..."
SC=$(curl -u $CATAPULT_USER:$CATAPULT_PASS \
          -w "%{http_code}" \
          --output catapult.out \
          -H "Content-Type: application/json" \
          -X POST \
          -d "{\"username\":\"${USER}\",\"reponame\":\"${REPO}\",\"buildnum\":${BUILD_NUM},\"app\":{\"run_type\":\"lambda\",\"id\":\"${APP_NAME}\",\"source\":\"github:Clever/${REPO}@${FULL_SHA}\",\"artifacts\":\"lambda:clever/${REPO}@${SHORT_SHA};Region=\\\"${LAMBDA_AWS_REGION},S3Bucket=\\\"${LAMBDA_AWS_BUCKET},S3Key=\\\"${LAMBDA_AWS_S3_KEY}\",\"branch\":\"${BRANCH}\"}}" \
          $CATAPULT_URL)

if [ "$SC" -eq 200 ]; then
    echo "Successfully published catapult application"
    rm -f catapult.out
    exit 0
else
    echo "Failed to publish catapult application"
    echo "------------------------------------------------"
    cat catapult.out
    echo ""
    echo "------------------------------------------------"
    rm -f catapult.out
    exit 1
fi
