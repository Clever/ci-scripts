#!/bin/bash

# Common functions used by more than on ci-script
#
# Usage:
#
#   . ./utils

set -e

install_awscli(){
  if type aws > /dev/null; then
    echo "AWS cli already installed"
    return
  fi

  echo "Installing AWS cli..."
  curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "/tmp/awscliv2.zip"
  unzip -q /tmp/awscliv2.zip -d /tmp
  sudo /tmp/aws/install
  echo "Completed AWS cli install"
}

assume_role_with_web_identity() {
  aws configure set profile $2
  read -r AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN << EOF
  $(aws sts assume-role-with-web-identity \
    --role-arn "$1" \
    --role-session-name "oidc-ecr-role-session" \
    --web-identity-token "${CIRCLE_OIDC_TOKEN_V2}" \
    --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]' \
    --output text)
EOF
  
  if [ -z "${AWS_ACCESS_KEY_ID}" ] || [ -z "${AWS_SECRET_ACCESS_KEY}" ] || [ -z "${AWS_SESSION_TOKEN}" ]; then
    echo "Failed to assume role";
    exit 1
  else
    aws configure set aws_access_key_id ${AWS_ACCESS_KEY_ID} --profile $2
    aws configure set aws_secret_access_key ${AWS_SECRET_ACCESS_KEY} --profile $2
    aws configure set aws_session_token ${AWS_SESSION_TOKEN} --profile $2
    echo "Assume role with web identity succeeded."
  fi
}

install_yq(){
  if type yq > /dev/null; then
    echo "yq already installed"
    return
  fi

  echo "Installing yq..."
  mkdir -p "/tmp/bin"
  wget -O "/tmp/bin/yq" "https://github.com/mikefarah/yq/releases/download/v4.27.5/yq_linux_amd64"
  chmod +x "/tmp/bin/yq"
  export PATH="/tmp/bin:$PATH"
  echo "Completed yq install"
}
