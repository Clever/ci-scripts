#!/bin/bash

# Logs into ECR, then builds and pushes docker image. Docker
# image is tagged with 7 character git commit SHA.
#
# Usage:
#
#   docker-publish 
#   optional flag "-r private-repos" enables Docker Build Kit to allow ssh socket mounting to pull private modules/repos


set -e

DIR=$(dirname "$0")
. $DIR/utils

# enable experimental cli features for 'docker manifest'
if [ -f "~/.docker/config.json" ]; then
    tmp=$(mktemp)
    jq '. + {"experimental":"enabled"}' ~/.docker/config.json > "$tmp"
    mv $tmp ~/.docker/config.json
else
    mkdir -p ~/.docker
    echo '{"experimental":"enabled"}' > ~/.docker/config.json
fi

readopt='none'
while getopts 'r:' flag; do
    case "${flag}" in
        r) readopt=${OPTARG};;
    esac
done

image_exists() {
    docker manifest inspect "$1" > /dev/null
    status=$?
    if $(exit $status); then
        true
    else
        false
    fi
}

check_ecr_vars() {
  # ECR required env vars
  if [[ -z $ECR_ACCOUNT_ID ]]; then echo "Missing var for ECR: ECR_ACCOUNT_ID" && exit 1; fi
  if [[ -z $ECR_PUSH_SECRET ]]; then echo "Missing var for ECR: ECR_PUSH_SECRET" && exit 1; fi
}

ecr_login(){
  REGION=$1
  ECR_REPO=$ECR_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com
  AWS_ACCESS_KEY_ID=$2 AWS_SECRET_ACCESS_KEY=$3 aws ecr --region $REGION get-login-password | docker login --username AWS --password-stdin $ECR_REPO
}

push_ecr_image(){
  REGION=$1
  ECR_URI=$ECR_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$REPO:$SHORT_SHA
  if image_exists $ECR_URI > /dev/null; then
      echo "ECR image exists, refusing to overwrite"
      return
  fi
  docker tag $ORG/$REPO:$SHORT_SHA $ECR_URI
  docker push $ECR_URI
}

# Set automatically by CircleCI
: ${CIRCLE_PROJECT_REPONAME?"Missing required env var"}
REPO=$CIRCLE_PROJECT_REPONAME
: ${CIRCLE_SHA1?"Missing required env var"}
SHORT_SHA=${CIRCLE_SHA1:0:7}

ORG=clever

ECR_REGION_US_WEST_1=us-west-1
ECR_REGION_US_WEST_2=us-west-2
ECR_REGION_US_EAST_1=us-east-1
ECR_REGION_US_EAST_2=us-east-2

echo "Docker version..."
docker version

# Check CLI + env vars for ECR
check_ecr_vars

install_awscli

# Some Dockerfiles for private repos depend on public images (and vice versa) in us-west-1
echo "If necessary, add the ECR_BUILD_ID and ECR_BUILD_SECRET env vars to circle manually."
echo "They can be found in init-service as CI_ECR_XXX_KEY and CI_ECR_XXX_SECRET."
if [[ -n $ECR_BUILD_ID ]]; then
  ecr_login us-west-1 $ECR_BUILD_ID $ECR_BUILD_SECRET
fi

echo "Building docker image..." 
if [ $readopt == "private-repos" ]; then
  echo "With Private Repos..."
  DOCKER_BUILDKIT=1 docker build --ssh default -t $ORG/$REPO:$SHORT_SHA . 
else
  docker build -t $ORG/$REPO:$SHORT_SHA .
fi

# ECR login.
echo "Logging into ECR..."
ecr_login $ECR_REGION_US_WEST_1 $ECR_PUSH_ID $ECR_PUSH_SECRET
ecr_login $ECR_REGION_US_WEST_2 $ECR_PUSH_ID $ECR_PUSH_SECRET
ecr_login $ECR_REGION_US_EAST_1 $ECR_PUSH_ID $ECR_PUSH_SECRET
ecr_login $ECR_REGION_US_EAST_2 $ECR_PUSH_ID $ECR_PUSH_SECRET

echo "Pushing to ECR..."
push_ecr_image $ECR_REGION_US_WEST_1
push_ecr_image $ECR_REGION_US_WEST_2
push_ecr_image $ECR_REGION_US_EAST_1
push_ecr_image $ECR_REGION_US_EAST_2
