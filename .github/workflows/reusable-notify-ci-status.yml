
# Workflow that notifies on CI status updates
# Currently it is used notify on CI failures
# Repos must have access to organizational secrets listed below in order to use this workflow

name: Notify via Slack on CI status update

on:
  workflow_call:
    secrets:
      CIRCLE_CI_INTEGRATIONS_USERNAME:
        required: true
      CIRCLE_CI_INTEGRATIONS_PASSWORD:
        required: true
      CIRCLE_CI_INTEGRATIONS_URL:
        required: true
      SLACK_BOT_TOKEN:
        required: true


jobs:
  notify_ci_status_update:
    name: Notify via Slack on CI status update
    runs-on: ubuntu-latest
    environment: production
    # only run if this event is associated with a single branch, otherwise we aren't sure the branches[0].name is the one that triggered the event.
    # this workflow is only fired from the calling repo when the branches[0].name is master, but if someone creates a new branch off master
    # and pushes to origin without adding additional commits, master will be included in the array even though it wasn't the triggering branch.
    # since merge/squash commits are almost always used upon merging to master, and are thus only associated with master at the time of
    # merging, we should still capture all intended situation since len(branches) will == 1
    if: github.event.branches[1] == null
    steps:
    - name: Notify
      uses: Clever/ci-scripts/.github/actions/notify-ci-status-action@master
      env:
        CIRCLE_CI_INTEGRATIONS_USERNAME: ${{ secrets.CIRCLE_CI_INTEGRATIONS_USERNAME }}
        CIRCLE_CI_INTEGRATIONS_PASSWORD: ${{ secrets.CIRCLE_CI_INTEGRATIONS_PASSWORD }}
        CIRCLE_CI_INTEGRATIONS_URL: ${{ secrets.CIRCLE_CI_INTEGRATIONS_URL }}
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      with:
        branch: ${{ github.event.branches[0].name }}
        description: ${{ github.event.description }}
        failedStep: ${{ github.event.context }}
        githubUsername: ${{ github.event.commit.author.login }}
        repo: ${{ github.event.repository.name }}
        state: ${{ github.event.state }}
        targetURL: ${{ github.event.target_url }}
